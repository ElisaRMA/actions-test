name: ⚙️ Atualização de parâmetros do job credit_data_science-prod-v1-aws
on:
  # Trigger when an issue is opened or edited
  issues:
    types: [opened, edited]

jobs:
  debug-parameters:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Get issue details and print labels
        run: |
          echo "Fetching issue data and debugging..."
          
          # Check which event triggered the workflow
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            echo "Workflow triggered by issue event"
            
            # For issue event trigger, use the issue context directly
            ISSUE_TITLE="${{ github.event.issue.title }}"
            ISSUE_BODY="${{ github.event.issue.body }}"
            
            echo "Issue title: $ISSUE_TITLE"
            echo "Issue body available: $([ ! -z "$ISSUE_BODY" ] && echo "Yes" || echo "No")"
            
            # Print issue labels if available - using toJSON to safely handle the data
            echo "Issue labels:"
            LABELS_JSON='${{ toJSON(github.event.issue.labels) }}'
            if [[ "$LABELS_JSON" != "null" && "$LABELS_JSON" != "" && "$LABELS_JSON" != "[]" ]]; then
              echo "$LABELS_JSON" | jq -r '.[].name' 2>/dev/null || echo "Could not parse labels"
            else
              echo "No labels found"
            fi
            
            # Parse specific parameters from the issue body
            if [[ ! -z "$ISSUE_BODY" && "$ISSUE_BODY" != "null" ]]; then
              # Extract parameters from checkboxes and inputs
              # Find which option is checked for WRITE_CREDIT_ENGINE
              if echo "$ISSUE_BODY" | grep -q '\- \[x\] true'; then
                WRITE_CREDIT_ENGINE="true"
              elif echo "$ISSUE_BODY" | grep -q '\- \[x\] false'; then
                WRITE_CREDIT_ENGINE="false"
              else
                WRITE_CREDIT_ENGINE="not specified"
              fi
              
              # Find which option is checked for INITIAL_DATE_CHECK
              if echo "$ISSUE_BODY" | grep -q '\- \[x\] Sim'; then
                INITIAL_DATE_CHECK="Sim"
              elif echo "$ISSUE_BODY" | grep -q '\- \[x\] Não'; then
                INITIAL_DATE_CHECK="Não"
              else
                INITIAL_DATE_CHECK="not specified"
              fi
              
              # Extract the date value from the input field - more robust approach
              INITIAL_DATE_SETUP=$(echo "$ISSUE_BODY" | awk '/Qual a data para o INITIAL_DATE/{getline; getline; print}' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//' || echo "not specified")
              if [[ -z "$INITIAL_DATE_SETUP" ]]; then
                INITIAL_DATE_SETUP="not specified"
              fi
              
              echo "WRITE_CREDIT_ENGINE: $WRITE_CREDIT_ENGINE"
              echo "INITIAL_DATE_CHECK: $INITIAL_DATE_CHECK"
              echo "INITIAL_DATE_SETUP: $INITIAL_DATE_SETUP"
            else
              echo "Issue body is empty or not available"
            fi
            
          else
            echo "Workflow triggered manually via workflow_dispatch"
          
