name: ⚙️ Atualização de parâmetros do job credit_data_science-prod-v1-aws
on:
  # Trigger when an issue is opened or edited
  issues:
    types: [opened, edited]
  # Allow manual trigger via the GitHub UI, no inputs required
  workflow_dispatch:
jobs:
  debug-parameters:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Get issue details and print labels
        run: |
              # Debug: Print the full issue body
              echo "=== FULL ISSUE BODY ==="
              echo "${{ github.event.issue.body }}"
              echo "======================"
              
              # Extract WRITE_CREDIT_ENGINE value
              if echo "${{ github.event.issue.body }}" | grep -q '^- \[x\] Haverá a execução da task RatingUnifier? (Marque em caso afirmativo)'; then
                WRITE_CREDIT_ENGINE="true"
                echo "DEBUG: WRITE_CREDIT_ENGINE checkbox is checked"
              else
                WRITE_CREDIT_ENGINE="false"
                echo "DEBUG: WRITE_CREDIT_ENGINE checkbox is NOT checked"
              fi
              
              # Initialize INITIAL_DATE variables
              INITIAL_DATE_CHECK="false"
              INITIAL_DATE_SETUP=""
              
              # Check INITIAL_DATE checkbox
              if echo "${ISSUE_BODY}" | grep -q '^- \[x\] Utilizar o parametro INITIAL_DATE na task RevenueModel? (Marque em caso afirmativo)'; then
                INITIAL_DATE_CHECK="true"
                echo "DEBUG: INITIAL_DATE checkbox is checked - attempting to extract date"
                
                INITIAL_DATE_SETUP=$(echo "${{ github.event.issue.body }}" | awk '/Qual a data para o INITIAL_DATE/{getline; getline; print}' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
                
                echo "DEBUG: Raw extracted date: '${INITIAL_DATE_SETUP}'"
                
                # Validate the date format
                if [[ "${INITIAL_DATE_SETUP}" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
                  echo "DEBUG: Valid date found: ${INITIAL_DATE_SETUP}"
                else
                  echo "::warning::Invalid date format extracted: '${INITIAL_DATE_SETUP}'"
                  INITIAL_DATE_SETUP=""
                fi
              else
                echo "DEBUG: INITIAL_DATE checkbox is NOT checked - skipping date extraction"
              fi
              
              # Output the values
              echo "WRITE_CREDIT_ENGINE=${WRITE_CREDIT_ENGINE}" >> "${GITHUB_OUTPUT}"
              echo "INITIAL_DATE_CHECK=${INITIAL_DATE_CHECK}" >> "${GITHUB_OUTPUT}"
              echo "INITIAL_DATE_SETUP=${INITIAL_DATE_SETUP}" >> "${GITHUB_OUTPUT}"
              
              # Final output
              echo "=== FINAL PARSED VALUES ==="
              echo "WRITE_CREDIT_ENGINE: ${WRITE_CREDIT_ENGINE}"
              echo "INITIAL_DATE_CHECK: ${INITIAL_DATE_CHECK}"
              echo "INITIAL_DATE_SETUP: ${INITIAL_DATE_SETUP}"
