name: ⚙️ Atualização de parâmetros do job credit_data_science-prod-v1-aws

on:
  # Trigger when an issue is opened or edited
  issues:
    types: [opened, edited]

  # Allow manual trigger via the GitHub UI, no inputs required
  workflow_dispatch:

jobs:
  debug-parameters:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Get issue details and print labels
        run: |
          echo "Fetching issue data and debugging..."

          # Fetch issue details using the issue trigger or manual dispatch
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          ISSUE_LABELS="${{ github.event.issue.labels }}"

          # Always check the title and labels regardless of trigger
          echo "Issue title: $ISSUE_TITLE"
          
          # Print the labels as an array (extract only the label names)
          echo "Issue labels as an array (only names):"
          for label in $(echo "$ISSUE_LABELS" | jq -r '.[].name'); do
            echo "Label: $label"
          done

          echo "Issue body: $ISSUE_BODY"

          if [ ! -z "$ISSUE_BODY" ]; then
              # Extract parameters from checkboxes and inputs
              # Find which option is checked for WRITE_CREDIT_ENGINE
              if echo "$ISSUE_BODY" | grep -q '- \[x\] true'; then
                WRITE_CREDIT_ENGINE="true"
              elif echo "$ISSUE_BODY" | grep -q '- \[x\] false'; then
                WRITE_CREDIT_ENGINE="false"
              else
                WRITE_CREDIT_ENGINE="not specified"
              fi

          # Parse and print specific parameters in the body if available
          WRITE_CREDIT_ENGINE=$(echo "$ISSUE_BODY" | grep -o 'WRITE_CREDIT_ENGINE.*' | sed 's/.*WRITE_CREDIT_ENGINE: //')
          INITIAL_DATE_CHECK=$(echo "$ISSUE_BODY" | grep -o 'INITIAL_DATE.*' | sed 's/.*INITIAL_DATE: //')
          INITIAL_DATE_SETUP=$(echo "$ISSUE_BODY" | grep -o 'INITIAL_DATE_SETUP.*' | sed 's/.*INITIAL_DATE_SETUP: //')

          echo "WRITE_CREDIT_ENGINE: $WRITE_CREDIT_ENGINE"
          echo "INITIAL_DATE_CHECK: $INITIAL_DATE_CHECK"
          echo "INITIAL_DATE_SETUP: $INITIAL_DATE_SETUP"

            # Manually fetch the issue (GitHub API)
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/issues?state=open" \
            | jq '.[] | select(.title | contains("[credit-data-science] Parameters_update"))' \
            | jq '.labels[].name'  # Outputs only the label names

      - name: Log parameters for further analysis
        run: |
          echo "Final parameters:"
          echo "WRITE_CREDIT_ENGINE: $WRITE_CREDIT_ENGINE"
          echo "INITIAL_DATE_CHECK: $INITIAL_DATE_CHECK"
          echo "Initial date setup: $INITIAL_DATE_SETUP"
