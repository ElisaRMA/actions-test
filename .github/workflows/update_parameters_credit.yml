name: Update Reference Date to Next Monday

on:
  schedule:
    # Runs every Thursday at 9:00 AM UTC
    - cron: '0 9 * * 3'
  # Optional: Allow manual workflow dispatch
  workflow_dispatch:

# Add these permissions
permissions:
  contents: write
  pull-requests: write
  
jobs:
  update-reference-date:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml python-dateutil
          pip install requests

      - name: Update reference date to next Monday
        id: update-date
        run: python .github/scripts/update_parameters.py
        shell: bash
        
      - name: Create branch and commit changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git checkout -b ${{ steps.update-date.outputs.branch_name }}
          git add .
          git commit -m "Update REFERENCE_DATE to ${{ steps.update-date.outputs.next_monday }}"
          git push origin ${{ steps.update-date.outputs.branch_name }}

      - name: Create Pull Request
        id: create-pr
        run: |
          python .github/scripts/create_pull_request.py \
            --repo "${{ github.repository }}" \
            --token "${{ secrets.GITHUB_TOKEN }}" \
            --branch "${{ steps.branch-name.outputs.branch }}" \
            --base "main" \
            --next-monday "${{ steps.update-date.outputs.next_monday }}" \
            --old-date "${{ steps.update-date.outputs.old_date }}" \
            --file-changed "${{ steps.update-date.outputs.file_changed }}"
  
  send-slack-notification:
    needs: update-reference-date
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send slack message
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸ”„ Reference Date Update PR Created",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*A new PR has been created to update the Reference Date to ${{ needs.update-reference-date.outputs.next_monday }}*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*PR Link*\n<${{ needs.update-reference-date.outputs.pr_url }}|View Pull Request #${{ needs.update-reference-date.outputs.pr_number }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow Run*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Changes:*\n${{ needs.update-reference-date.outputs.diff_content }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*File Changed:*\n`${{ needs.update-reference-date.outputs.file_changed }}`"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "This is an automated notification from GitHub Actions."
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

