name: Update Reference Date to Next Monday

on:
  schedule:
    # Runs every Thursday at 9:00 AM UTC
    - cron: '0 9 * * 4'
  # Optional: Allow manual workflow dispatch
  workflow_dispatch:

# Add these permissions
permissions:
  contents: write
  pull-requests: write

jobs:
  update-reference-date:
    runs-on: ubuntu-latest
    outputs:
      pr_url: ${{ steps.create-pr.outputs.pr_url }}
      pr_number: ${{ steps.create-pr.outputs.pr_number }}
      next_monday: ${{ steps.update-date.outputs.next_monday }}
      old_date: ${{ steps.update-date.outputs.old_date }}
      file_changed: ${{ steps.update-date.outputs.file_changed }}
      branch_name: ${{ steps.update-date.outputs.branch_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Fetch all history for all branches
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml python-dateutil
          pip install requests

      - name: Update reference date to next Monday
        id: update-date
        run: python .github/scripts/update_parameters.py
        shell: bash

      - name: Create unique branch name
        id: branch-name
        run: |
          # Add timestamp to make branch name unique
          BRANCH_NAME="${{ steps.update-date.outputs.branch_name }}"
          echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "Using branch name: ${BRANCH_NAME}"

      - name: Create branch and commit changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git checkout -b ${{ steps.branch-name.outputs.branch }}
          git add .
          git commit -m "Update REFERENCE_DATE to ${{ steps.update-date.outputs.next_monday }}"
          git push -f origin ${{ steps.branch-name.outputs.branch }}

      - name: Create Pull Request
        id: create-pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const nextMonday = '${{ steps.update-date.outputs.next_monday }}';
            const branchName = '${{ steps.branch-name.outputs.branch }}';
            const oldDate = '${{ steps.update-date.outputs.old_date }}';
            const fileChanged = '${{ steps.update-date.outputs.file_changed }}';
            
            const { repo, owner } = context.repo;
            try {
              const result = await github.rest.pulls.create({
                owner,
                repo,
                title: `Update REFERENCE_DATE to ${nextMonday}`,
                body: `This automated PR updates the REFERENCE_DATE to the next Monday (${nextMonday}).\n\nAutomatically generated by the Update Reference Date workflow.`,
                head: branchName,
                base: 'main'
              });
              console.log(`Pull request created: ${result.data.html_url}`);
              
              // Set outputs for use in the Slack notification
              core.setOutput('pr_url', result.data.html_url);
              core.setOutput('pr_number', result.data.number);
              
              // Get diff for the PR
              const files = await github.rest.pulls.listFiles({
                owner,
                repo,
                pull_number: result.data.number
              });
              
              console.log(`Files changed in PR: ${files.data.length}`);
              
              return {
                pr_url: result.data.html_url,
                pr_number: result.data.number
              };
            } catch (error) {
              console.log(`Error creating PR: ${error.message}`);
              // Check if there's already an open PR
              const prs = await github.rest.pulls.list({
                owner,
                repo,
                state: 'open',
                head: `${owner}:${branchName}`
              });
              
              if (prs.data.length > 0) {
                console.log(`Found existing PR: ${prs.data[0].html_url}`);
                core.setOutput('pr_url', prs.data[0].html_url);
                core.setOutput('pr_number', prs.data[0].number);
                
                return {
                  pr_url: prs.data[0].html_url,
                  pr_number: prs.data[0].number
                };
              } else {
                throw error;
              }
            }

      - name: Get file diff for Slack
        id: get-diff
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const prNumber = ${{ steps.create-pr.outputs.pr_number }};
            const oldDate = '${{ steps.update-date.outputs.old_date }}';
            const newDate = '${{ steps.update-date.outputs.next_monday }}';
            const fileChanged = '${{ steps.update-date.outputs.file_changed }}';
            
            // Get the diff for the PR
            const files = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: prNumber
            });
            
            let diffContent = '';
            
            for (const file of files.data) {
              diffContent += `File Changed: \`${file.filename}\`\n`;
              diffContent += "```diff\n";
              // Get only the relevant parts of the patch
              const patch = file.patch || '';
              const lines = patch.split('\n');
              for (const line of lines) {
                if (line.startsWith('+') || line.startsWith('-')) {
                  diffContent += line + '\n';
                }
              }
              diffContent += "```\n";
            }
            
            // If no files or no patch, provide a simple summary
            if (!diffContent) {
              diffContent = `Changed REFERENCE_DATE from \`${oldDate}\` to \`${newDate}\` in file \`${fileChanged}\``;
            }
            
            // Set the output
            core.setOutput('diff_content', diffContent);

  send-slack-notification:
    needs: update-reference-date
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send slack message
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üîÑ Update RFERENCE_DATE - PR criada",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Uma nova PR foi criada para atualizar o par√¢metro REFERENCE_DATE no job produtivo*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Link para PR*\n<${{ needs.update-reference-date.outputs.pr_url }}|View Pull Request #${{ needs.update-reference-date.outputs.pr_number }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Link para o Job*\n https://stone-dataplatform-production.cloud.databricks.com/jobs/1121459475236441"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Mudan√ßas:*\n REFERENCE_DATE modificada de `${{ needs.update-reference-date.outputs.old_date }}` para `${{ needs.update-reference-date.outputs.next_monday }}`"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Para mais altera√ß√µes, fa√ßa commits na branch `${{ needs.update-reference-date.outputs.branch_name }}`. FYI @mlops"
                  }
                },                
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "This is an automated notification from GitHub Actions."
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
